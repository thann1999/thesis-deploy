{"version":3,"sources":["routes/private-route.tsx","../node_modules/@material-ui/core/esm/Grid/Grid.js","../node_modules/@material-ui/core/esm/Container/Container.js","app/modules/home/pages/home.component.tsx","app/modules/home/router.tsx"],"names":["PrivateRoute","props","Component","component","rest","useState","isLoading","setIsLoading","dispatch","useAppDispatch","useEffect","a","fetchLogin","fetLoginAPI","user","useAppSelector","state","auth","render","accountId","to","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","Grid","React","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","root","_extends","StyledGrid","withStyles","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name","Container","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","capitalize","_defineProperty","marginLeft","marginRight","paddingLeft","paddingRight","Object","values","acc","value","maxWidthXs","max","maxWidthSm","maxWidthMd","maxWidthLg","maxWidthXl","CenteredGrid","Authentication","match","useRouteMatch","path","url","HomePage"],"mappings":"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","file":"static/js/14.a435de53.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\r\nimport { useAppDispatch, useAppSelector } from 'redux/hooks';\r\nimport { fetchLogin } from '../redux/authentication-slice';\r\n\r\ninterface PrivateRouteProps extends RouteProps {\r\n  component: any,\r\n}\r\n\r\nfunction PrivateRoute(props: PrivateRouteProps) {\r\n  const { component: Component, ...rest } = props\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    async function fetLoginAPI() {\r\n      await fetchLogin(dispatch)\r\n      setIsLoading(false)\r\n    }\r\n    fetLoginAPI()\r\n  }, [dispatch])\r\n\r\n  const user = useAppSelector((state) => state.auth.user);\r\n  return (\r\n    <>\r\n      {!isLoading && (\r\n        <Route\r\n          {...rest}\r\n          render={(props) =>\r\n            user.accountId !== '' ? (\r\n              <Component {...props}></Component>\r\n            ) : (\r\n              <Redirect to='/auth/login'></Redirect>\r\n            )\r\n          }\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import { Container } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport React from 'react';\r\n\r\nexport default function CenteredGrid() {\r\n\r\n  return (\r\n    <Container className='main-page'>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Switch, useRouteMatch } from \"react-router-dom\";\r\nimport PrivateRoute from \"../../../routes/private-route\";\r\nimport './css/style.scss';\r\nimport HomePage from \"./pages/home.component\";\r\n\r\nexport default function Authentication() {\r\n  const match = useRouteMatch();\r\n\r\n  return (\r\n    <Switch>\r\n      <PrivateRoute path={match.url} component={HomePage} />\r\n    </Switch>\r\n  );\r\n}\r\n"],"sourceRoot":""}