{"version":3,"sources":["dataworld/blocks/menu-bar/menu-bar.component.tsx","App.js","reportWebVitals.js","index.js","services/axios/handle-api.const.ts","redux/authentication-slice.ts","app/const/api-const/authentication-url.const.ts","api/authentication-api.ts","redux/hooks.ts","store.ts","routes/default-router.component.tsx","services/axios/common-services.const.ts","dataworld/parts/toast/add-toast.component.tsx","dataworld/parts/search-field/search-field.component.tsx","dataworld/blocks/loading/loading-page.component.tsx"],"names":["StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuBar","id","React","useState","anchorEl","setAnchorEl","popoverId","setPopoverId","history","useHistory","dispatch","useAppDispatch","user","useSelector","state","auth","handleMenu","event","currentTarget","handleGotoProfile","tabIndex","push","pathname","username","handleLogout","a","AuthenticationAPI","logout","logoutSuccess","accountId","AppBar","position","className","Toolbar","Link","href","color","placeHolder","onChange","Tooltip","title","IconButton","onClick","StorefrontRounded","fontSize","AddCircleOutline","aria-label","aria-controls","aria-haspopup","Avatar","src","avatar","disableScrollLock","keepMounted","open","Boolean","onClose","MenuItem","style","borderBottom","Typography","name","variant","AccountCircleOutlined","SettingsOutlined","ExitToApp","Authentication","lazy","Home","Introduce","Profile","DataSet","NotFound","App","fallback","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById","configAPI","API","data","method","url","process","URL","headers","localStorage","getItem","createResult","result","errors","dataType","apiResult","status","message","token","undefined","response","requestAPI","fetchLogin","addToast","type","window","location","axios","request","requestApiNotCheckLogin","getLoginStatus","loginResult","STATUS_OK","loginSuccess","getNewAccessToken","newLoginResult","setItem","authenticationSlice","createSlice","initialState","reducers","payload","actions","reducer","LOGIN","LOGOUT","CHECK_LOGIN","REGISTER_ACCOUNT","VERIFY_ACCOUNT","FORGOT_PASSWORD","RESET_PASSWORD","LOGIN_GOOGLE","LOGIN_FACEBOOK","GET_NEW_ACCESS_TOKEN","login","account","registerAccount","sendCode","code","verifyCode","forgotPassword","email","resetPassword","resetCode","newPassword","password","loginGoogle","accessToken","profile","loginFacebook","refreshToken","removeItem","useDispatch","useAppSelector","combineReducers","authentication","configureStore","DefaultRoute","Component","rest","isLoading","setIsLoading","useEffect","fetLoginAPI","toast","configure","StyledTextField","styled","TextField","SearchField","fullWidth","placeholder","InputProps","startAdornment","size","LoadingPage"],"mappings":"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","file":"static/js/main.43fde454.chunk.js","sourcesContent":["import {\r\n  AppBar,\r\n  Avatar,\r\n  IconButton,\r\n  Link,\r\n  Menu,\r\n  MenuItem,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography,\r\n  withStyles\r\n} from '@material-ui/core';\r\nimport {\r\n  AccountCircleOutlined,\r\n  ExitToApp, AddCircleOutline,\r\n  SettingsOutlined, StorefrontRounded\r\n} from '@material-ui/icons';\r\nimport AuthenticationAPI from \"api/authentication-api\";\r\nimport SearchField from 'dataworld/parts/search-field/search-field.component';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { logoutSuccess } from 'redux/authentication-slice';\r\nimport { useAppDispatch } from 'redux/hooks';\r\nimport { RootState } from 'store';\r\nimport './menu-bar.scss';\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: '1px solid #d3d4d5',\r\n  },\r\n})((props: any) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'right',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'right',\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nexport default function MenuBar() {\r\n  const [anchorEl, setAnchorEl] = React.useState<any>(null);\r\n  const [popoverId, setPopoverId] = React.useState<number>(0)\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n  const user = useSelector((state: RootState) => state.auth.user);\r\n\r\n  const handleMenu = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null, id: number) => {\r\n    setPopoverId(id)\r\n    setAnchorEl(event ? event.currentTarget : null);\r\n  };\r\n\r\n  const handleGotoProfile = (tabIndex?: number) => {\r\n    handleMenu(null, 0);\r\n    history.push({\r\n      pathname: `/profile/${user.username}`,\r\n      state: {\r\n        tabIndex: tabIndex\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    await AuthenticationAPI.logout()\r\n    dispatch(logoutSuccess());\r\n    handleMenu(null, 0);\r\n  };\r\n\r\n  const isOpenModal = (id: number) => {\r\n    return Boolean(id === popoverId) && Boolean(anchorEl)\r\n  }\r\n\r\n  const handleGotoCreateDataset = () => {\r\n    history.push('/dataset/create')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {user.accountId !== '' && (\r\n        <AppBar position='fixed' className='t-app-bar'>\r\n          <Toolbar className='b-tool-bar'>\r\n            <div className='h-d_flex p-header-search'>\r\n              <Link href='/dataset' className='p-redirect-page' color='inherit'>Data World</Link>\r\n\r\n              <SearchField\r\n                className='p-search-field h-ml-20'\r\n                placeHolder='Tìm kiếm...'\r\n                onChange={() => { }}\r\n              />\r\n            </div>\r\n\r\n            <div className='h-d_flex'>\r\n              <Tooltip title='Kho lưu trữ' className='h-mr-16'>\r\n                <IconButton\r\n                  color='inherit'\r\n                  onClick={() => handleGotoProfile(1)}\r\n                >\r\n                  <StorefrontRounded fontSize='default' />\r\n                </IconButton>\r\n              </Tooltip>\r\n\r\n              <Tooltip className='h-mr-16' title='Tạo dataset'>\r\n                <IconButton\r\n                  color='inherit'\r\n                  className='h-mr-16'\r\n                  onClick={handleGotoCreateDataset}\r\n                >\r\n                  <AddCircleOutline fontSize='default' />\r\n                </IconButton>\r\n              </Tooltip>\r\n\r\n              <IconButton\r\n                aria-label='account of current user'\r\n                aria-controls='menu-appbar'\r\n                aria-haspopup='true'\r\n                onClick={(event) => handleMenu(event, 1)}\r\n              >\r\n                <Avatar src={user.avatar} />\r\n              </IconButton>\r\n            </div>\r\n\r\n            <StyledMenu\r\n              id='menu-appbar'\r\n              className='h-mt-38'\r\n              disableScrollLock\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={isOpenModal(1)}\r\n              onClose={() => handleMenu(null, 1)}\r\n            >\r\n              <MenuItem\r\n                onClick={() => handleGotoProfile(0)}\r\n                style={{ borderBottom: '1px solid #dedfe0' }}\r\n              >\r\n                <div >\r\n                  <Typography className='f-weight-700'>{user.name}</Typography>\r\n                  <Typography className='p-gray-color-typography' variant='body2'>@{user.username}</Typography>\r\n                </div>\r\n              </MenuItem>\r\n\r\n              <MenuItem onClick={() => handleGotoProfile(0)}>\r\n                <AccountCircleOutlined className='h-mr-10' />\r\n                Hồ sơ cá nhân\r\n              </MenuItem>\r\n\r\n              <MenuItem onClick={() => handleGotoProfile(2)}>\r\n                <SettingsOutlined className='h-mr-10' />\r\n                Cài đặt tài khoản\r\n              </MenuItem>\r\n\r\n              <MenuItem onClick={handleLogout}>\r\n                <ExitToApp className='h-mr-10' />\r\n                Đăng xuất\r\n              </MenuItem>\r\n            </StyledMenu>\r\n          </Toolbar>\r\n        </AppBar>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import LoadingPage from \"dataworld/blocks/loading/loading-page.component\";\r\nimport React, { Suspense } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport MenuBar from \"./dataworld/blocks/menu-bar/menu-bar.component\";\r\nimport DefaultRoute from \"./routes/default-router.component\";\r\n\r\nconst Authentication = React.lazy(() =>\r\n  import(\"./app/modules/authentication/router\")\r\n);\r\nconst Home = React.lazy(() => import(\"app/modules/home/router\"));\r\nconst Introduce = React.lazy(() => import(\"app/modules/introduce/router\"))\r\nconst Profile = React.lazy(() => import(\"app/modules/profile/router\"))\r\nconst DataSet = React.lazy(() => import(\"app/modules/dataset/router\"))\r\nconst NotFound = React.lazy(() => import(\"dataworld/blocks/not-found-page/not-found-page\"))\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Suspense\r\n        fallback={<LoadingPage />}\r\n      >\r\n        <MenuBar />\r\n        <Switch>\r\n          <Route path=\"/auth\" component={Authentication} />\r\n          <Route path=\"/home\" component={Home} />\r\n          <Route path='/profile' component={Profile} />\r\n          <DefaultRoute path=\"/\" component={Introduce} exact={true} />\r\n          <Route path='/dataset' component={DataSet} />\r\n          <DefaultRoute path='/404' component={NotFound} />\r\n          <DefaultRoute component={NotFound} />\r\n        </Switch>\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport './styles/main.scss'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <App />\r\n          <ToastContainer />\r\n        </BrowserRouter>\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import axios from 'axios';\r\nimport addToast from 'dataworld/parts/toast/add-toast.component';\r\nimport { fetchLogin } from 'redux/authentication-slice';\r\nimport store from 'store';\r\nimport { ApiTemplate } from './common-services.const';\r\n\r\nconst BASE_URL_API = process.env.REACT_APP_BASE_URL_API;\r\n\r\nexport interface Result<T> {\r\n  status: number,\r\n  message: string,\r\n  token: string | any,\r\n  data: T | any,\r\n}\r\n\r\nconst configAPI = (API: any, data?: any) => {\r\n  return {\r\n    method: API.method,\r\n    url: BASE_URL_API + API.URL,\r\n    headers: {\r\n      \"auth-token\": localStorage.getItem(\"auth-token\"),\r\n    },\r\n    data: data,\r\n  };\r\n};\r\n\r\n\r\nconst createResult = <T>(result?: any, errors?: any, dataType?: T): Result<T> => {\r\n  let apiResult: Result<T> = {\r\n    status: 0,\r\n    message: '',\r\n    token: undefined,\r\n    data: dataType,\r\n  }\r\n\r\n  if (result) {\r\n    apiResult = {\r\n      status: result.status,\r\n      message: result.data.message,\r\n      token: result.data.token,\r\n      data: result.data.data,\r\n    }\r\n\r\n  } else {\r\n    apiResult = {\r\n      ...apiResult,\r\n      status: errors.response.status,\r\n      message: errors.response.data.message,\r\n    }\r\n  }\r\n  return apiResult\r\n};\r\n\r\nconst requestAPI = async <T>(URL: ApiTemplate, data?: any): Promise<Result<T>> => {\r\n  try {\r\n    const isLogin = await fetchLogin(store.dispatch)\r\n    if (!isLogin) {\r\n      addToast({ message: 'Phiên đăng nhập đã hết hạn, hãy đăng nhập lại', type: 'error' })\r\n      window.location.href = '/auth/login'\r\n    }\r\n    const result = await axios.request(configAPI(URL, data))\r\n    return createResult<T>(result)\r\n  } catch (error) {\r\n    const result = createResult(null, error)\r\n    addToast({ message: result.message, type: 'error' })\r\n    return result\r\n  }\r\n}\r\n\r\nconst requestApiNotCheckLogin = async <T>(URL: ApiTemplate, data?: any): Promise<Result<T>> => {\r\n  try {\r\n    const result = await axios.request(configAPI(URL, data))\r\n    return createResult<T>(result)\r\n  } catch (error) {\r\n    return createResult(null, error)\r\n  }\r\n}\r\n\r\nexport {\r\n  configAPI,\r\n  createResult,\r\n  requestAPI,\r\n  requestApiNotCheckLogin\r\n};\r\n\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport AuthenticationAPI from \"../api/authentication-api\";\r\nimport { STATUS_OK } from \"services/axios/common-services.const\";\r\nimport { AppDispatch } from \"store\";\r\n\r\nconst fetchLogin = async (dispatch: AppDispatch) => {\r\n  //check login status\r\n  const loginResult = await AuthenticationAPI.getLoginStatus()\r\n  if (loginResult.status === STATUS_OK) {\r\n    dispatch(loginSuccess(loginResult.data))\r\n    return true\r\n  }\r\n\r\n  //if access token expired, get new access token by refresh token\r\n  const newLoginResult = await AuthenticationAPI.getNewAccessToken()\r\n  if (newLoginResult.status === STATUS_OK) {\r\n    localStorage.setItem('auth-token', newLoginResult.token)\r\n    dispatch(loginSuccess(newLoginResult.data))\r\n    return true\r\n  }\r\n\r\n  //if refresh token expired => logout\r\n  await AuthenticationAPI.logout()\r\n  dispatch(logoutSuccess());\r\n  return false\r\n}\r\n\r\ninterface User {\r\n  accountId: string,\r\n  avatar: string,\r\n  username: string,\r\n  name: string,\r\n}\r\n\r\ninterface InitialState {\r\n  user: User\r\n}\r\nconst initialState: InitialState = {\r\n  user: {\r\n    accountId: '',\r\n    avatar: '',\r\n    username: '',\r\n    name: '',\r\n  }\r\n}\r\n\r\nconst authenticationSlice = createSlice({\r\n  name: \"authentication\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    loginSuccess: (state, { payload }: PayloadAction<User>) => {\r\n      state.user = payload\r\n    },\r\n    logoutSuccess: (state) => {\r\n      state.user.accountId = '';\r\n      state.user.avatar = '';\r\n      state.user.username = '';\r\n      state.user.name = '';\r\n    },\r\n  },\r\n});\r\n\r\nconst { actions, reducer } = authenticationSlice;\r\nexport const { loginSuccess, logoutSuccess } = actions;\r\nexport { fetchLogin };\r\nexport default reducer;\r\n","import { ApiTemplate } from 'services/axios/common-services.const'\r\n\r\nconst LOGIN: ApiTemplate = {\r\n  method: \"POST\",\r\n  URL: \"auth/login\",\r\n};\r\n\r\nconst LOGOUT: ApiTemplate = {\r\n  method: \"POST\",\r\n  URL: \"auth/logout\"\r\n}\r\nconst CHECK_LOGIN: ApiTemplate = {\r\n  method: \"GET\",\r\n  URL: \"auth/login\",\r\n};\r\nconst REGISTER_ACCOUNT: ApiTemplate = {\r\n  method: \"POST\",\r\n  URL: \"auth/register\",\r\n};\r\nconst VERIFY_ACCOUNT: ApiTemplate = {\r\n  method: \"POST\",\r\n  URL: \"auth/verify-account\",\r\n};\r\n\r\nconst FORGOT_PASSWORD: ApiTemplate = {\r\n  method: \"POST\",\r\n  URL: \"auth/forgot-password\"\r\n}\r\n\r\nconst RESET_PASSWORD: ApiTemplate = {\r\n  method: \"POST\",\r\n  URL: `${process.env.REACT_APP_BASE_URL_API}auth/reset-password`\r\n}\r\n\r\nconst LOGIN_GOOGLE: ApiTemplate = {\r\n  method: \"POST\",\r\n  URL: \"auth/login-google\"\r\n}\r\n\r\nconst LOGIN_FACEBOOK: ApiTemplate = {\r\n  method: \"POST\",\r\n  URL: \"auth/login-facebook\"\r\n}\r\n\r\nconst GET_NEW_ACCESS_TOKEN: ApiTemplate = {\r\n  method: \"POST\",\r\n  URL: \"auth/refresh-token\"\r\n}\r\n\r\nexport {\r\n  LOGIN,\r\n  LOGOUT,\r\n  REGISTER_ACCOUNT,\r\n  CHECK_LOGIN,\r\n  VERIFY_ACCOUNT,\r\n  FORGOT_PASSWORD,\r\n  RESET_PASSWORD,\r\n  LOGIN_GOOGLE,\r\n  LOGIN_FACEBOOK,\r\n  GET_NEW_ACCESS_TOKEN\r\n};","import {\r\n  CHECK_LOGIN, FORGOT_PASSWORD,\r\n  GET_NEW_ACCESS_TOKEN, LOGIN,\r\n  LOGIN_FACEBOOK,\r\n  LOGIN_GOOGLE,\r\n  LOGOUT, REGISTER_ACCOUNT,\r\n  RESET_PASSWORD, VERIFY_ACCOUNT\r\n} from 'app/const/api-const/authentication-url.const';\r\nimport axios from 'axios';\r\nimport { configAPI, createResult, requestApiNotCheckLogin } from 'services/axios/handle-api.const';\r\n\r\nexport default class AuthenticationAPI {\r\n  /* login */\r\n  static login = async (account: any) => {\r\n    return await requestApiNotCheckLogin(LOGIN, account)\r\n  };\r\n\r\n  /* Register account */\r\n  static registerAccount = async (account: any) => {\r\n    return await requestApiNotCheckLogin(REGISTER_ACCOUNT, account)\r\n  };\r\n\r\n  /* Get login status: logged or not */\r\n  static getLoginStatus = async () => {\r\n    return requestApiNotCheckLogin(CHECK_LOGIN)\r\n  };\r\n\r\n  /* Send verify code to backend */\r\n  static sendCode = async (code: any, accountId: any) => {\r\n    const data = {\r\n      verifyCode: code,\r\n      accountId: accountId,\r\n    };\r\n    return await requestApiNotCheckLogin(VERIFY_ACCOUNT, data)\r\n  };\r\n\r\n  /* Send email to get link reset email */\r\n  static forgotPassword = async (email: any) => {\r\n    const data = {\r\n      email: email,\r\n    };\r\n    return await requestApiNotCheckLogin(FORGOT_PASSWORD, data)\r\n  };\r\n\r\n  /* Reset password */\r\n  static resetPassword = async (resetCode: string, newPassword: string) => {\r\n    try {\r\n      const data = {\r\n        password: newPassword,\r\n      };\r\n      const result = await axios.request({\r\n        method: \"POST\",\r\n        url: RESET_PASSWORD.URL,\r\n        headers: {\r\n          \"auth-token\": localStorage.getItem(\"auth-token\"),\r\n          \"reset-password-token\": resetCode,\r\n        },\r\n        data: data,\r\n      });\r\n      return createResult(result);\r\n    } catch (error) {\r\n      return createResult(null, error);\r\n    }\r\n  };\r\n\r\n  /* Login with facebook */\r\n  static loginGoogle = async (accessToken: any, profile: any) => {\r\n    const data = {\r\n      accessToken: accessToken,\r\n      profile: profile,\r\n    };\r\n    return await requestApiNotCheckLogin(LOGIN_GOOGLE, data)\r\n  };\r\n\r\n  /* Login with google */\r\n  static loginFacebook = async (accessToken: any, profile: any) => {\r\n    const data = {\r\n      accessToken: accessToken,\r\n      profile: profile,\r\n    };\r\n    return await requestApiNotCheckLogin(LOGIN_FACEBOOK, data)\r\n  };\r\n\r\n  /* Get new access token */\r\n  static getNewAccessToken = async () => {\r\n    const data = {\r\n      refreshToken: localStorage.getItem('refresh-token'),\r\n    }\r\n    return requestApiNotCheckLogin(GET_NEW_ACCESS_TOKEN, data)\r\n  };\r\n\r\n  /* Logout */\r\n  static logout = async () => {\r\n    const data = {\r\n      refreshToken: localStorage.getItem('refresh-token'),\r\n    }\r\n    try {\r\n      const result = await axios.request(configAPI(LOGOUT, data))\r\n      localStorage.removeItem('auth-token');\r\n      localStorage.removeItem('refresh-token');\r\n      return createResult(result)\r\n    } catch (error) {\r\n      return createResult(null, error)\r\n    }\r\n  };\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport { RootState, AppDispatch } from 'store'\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { configureStore, combineReducers} from '@reduxjs/toolkit'\r\nimport authentication from './redux/authentication-slice'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authentication\r\n})\r\n\r\nconst store = configureStore({\r\n  reducer : {\r\n    auth: authentication    \r\n  }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport default store;","import { useEffect, useState } from 'react';\r\nimport { Route, RouteProps } from 'react-router-dom';\r\nimport { fetchLogin } from '../redux/authentication-slice';\r\nimport { useAppDispatch } from 'redux/hooks';\r\n\r\ninterface DefaultRouteProps extends RouteProps {\r\n  component: any,\r\n}\r\n\r\nexport default function DefaultRoute(props: DefaultRouteProps) {\r\n  const { component: Component, ...rest } = props\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    async function fetLoginAPI() {\r\n      await fetchLogin(dispatch)\r\n      setIsLoading(false)\r\n    }\r\n    fetLoginAPI()\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <>\r\n      {!isLoading && (\r\n        <Route\r\n          {...rest}\r\n          render={(props) =>\r\n            <Component {...props}></Component>\r\n          }\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n","export const STATUS_OK = 200\r\n\r\nexport interface ApiTemplate {\r\n    method: 'GET' | 'POST' | 'DELETE' | 'UPDATE',\r\n    URL: string\r\n}\r\n","import React from 'react'\r\nimport { toast, ToastPosition, TypeOptions } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\n\r\ninterface Toast {\r\n  message: string,\r\n  position?: ToastPosition,\r\n  type: TypeOptions\r\n}\r\n\r\nexport default function addToast({ message, position = \"top-right\", type }: Toast): React.ReactNode {\r\n  return toast(message, { position: position, type: type })\r\n}","import { InputAdornment, TextField } from '@material-ui/core'\r\nimport { Search } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport styled from \"styled-components\";\r\n\r\n\r\ninterface SearchFieldProps {\r\n  placeHolder: string,\r\n  className?: string,\r\n  onChange: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\r\n}\r\n\r\nconst StyledTextField = styled(TextField)`\r\n  .MuiOutlinedInput-root {\r\n    border-radius: 15px;\r\n  }\r\n`;\r\n\r\nexport default function SearchField({ onChange, placeHolder, className }: SearchFieldProps) {\r\n  return (\r\n    <StyledTextField\r\n      type=\"search\"\r\n      fullWidth\r\n      onChange={(event) => onChange(event)}\r\n      placeholder={placeHolder}\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <Search />\r\n          </InputAdornment>\r\n        )\r\n      }}\r\n      className={className}\r\n      variant=\"outlined\"\r\n      size=\"small\"\r\n    />\r\n  )\r\n}","import React from 'react'\r\nimport './loading-page.scss'\r\n\r\nexport default function LoadingPage() {\r\n  return (\r\n    <div className=\"t-loading-page\">\r\n      <div className='loader'>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}